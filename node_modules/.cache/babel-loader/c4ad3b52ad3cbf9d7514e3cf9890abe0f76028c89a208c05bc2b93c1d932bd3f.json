{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ion.catana\\\\OneDrive - ENGITEL SPA\\\\Desktop\\\\Work\\\\keycloud\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.js\nimport React from \"react\"; // Importo React per creare componenti\nimport { Container, Box, Typography } from \"@mui/material\"; // Importo i componenti Material-UI necessari\nimport { pxToRem } from \"../utils/pxToRem\"; // Funzione di utilità per convertire px in rem\nimport { useTheme } from \"@mui/material/styles\"; // Importo useTheme per accedere al tema corrente\nimport { useNavigate } from \"react-router-dom\"; // Importo useNavigate per gestire la navigazione tra le pagine\nimport CustomButton from \"./customComponents/CustomButton\"; // Importo il componente CustomButton per i pulsanti personalizzati\nimport { useTranslation } from \"react-i18next\"; // Importo il hook useTranslation per la gestione delle traduzioni\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // Creo un componente funzionale per la dashboard\n\n  const theme = useTheme(); // Uso il tema corrente per applicare gli stili\n  const navigate = useNavigate(); // Uso useNavigate per navigare tra le pagine dell'applicazione\n  const {\n    t\n  } = useTranslation(); // Uso il hook useTranslation per ottenere la funzione di traduzione\n\n  // Funzione per navigare alla pagina degli appartamenti\n  const handleViewApartmentsClick = () => {\n    navigate(\"/apartments\"); // Uso navigate per reindirizzare alla pagina degli appartamenti\n  };\n\n  // Funzione per navigare alla pagina dei piani di pagamento\n  const handleViewPricingPlansClick = () => {\n    navigate(\"/pricing\"); // Uso navigate per reindirizzare alla pagina dei piani di pagamento\n  };\n  return (\n    /*#__PURE__*/\n    // Contenitore principale per il layout della dashboard\n    _jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          // Definisce il layout flessibile\n          flexDirection: \"column\",\n          // Disposizione degli elementi in colonna\n          alignItems: \"center\",\n          // Centra gli elementi all'interno del box\n          padding: pxToRem(20),\n          // Padding interno calcolato in rem\n          borderRadius: pxToRem(8),\n          // Bordi arrotondati del box\n          backgroundColor: theme.palette.background.paper,\n          // Usa il colore di sfondo dal tema\n          boxShadow: `0px ${pxToRem(4)} ${pxToRem(10)} rgba(0, 0, 0, 0.3)`,\n          // Applica un'ombra al box\n          marginBottom: pxToRem(40) // Aggiunge spazio sotto la box per separare i componenti\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\" // Componente heading principale\n          ,\n          variant: \"h4\" // Variante del testo di livello 4\n          ,\n          sx: {\n            marginBottom: pxToRem(24),\n            // Spazio sotto il titolo\n            color: theme.palette.text.primary // Usa il colore del testo dal tema\n          },\n          children: [t(\"dashboard\"), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          variant: \"contained\" // Variante del pulsante per avere uno sfondo pieno\n          ,\n          onClick: handleViewApartmentsClick // Usa la funzione per navigare alla pagina degli appartamenti\n          ,\n          sx: {\n            backgroundColor: theme.palette.primary.main,\n            // Usa il colore primario dal tema\n            color: theme.colors.pureWhite,\n            // Colore del testo impostato a bianco puro\n            marginBottom: pxToRem(16),\n            // Spazio sotto il pulsante\n            \"&:hover\": {\n              backgroundColor: theme.palette.secondary.main\n            } // Cambia colore al passaggio del mouse\n          },\n          children: [t(\"apartments\"), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          variant: \"contained\" // Variante del pulsante per avere uno sfondo pieno\n          ,\n          onClick: handleViewPricingPlansClick // Usa la funzione per navigare alla pagina dei piani di pagamento\n          ,\n          sx: {\n            backgroundColor: theme.palette.primary.main,\n            // Usa il colore primario dal tema\n            color: theme.colors.pureWhite,\n            // Colore del testo impostato a bianco puro\n            marginBottom: pxToRem(16),\n            // Spazio sotto il pulsante\n            \"&:hover\": {\n              backgroundColor: theme.palette.secondary.main\n            } // Cambia colore al passaggio del mouse\n          },\n          children: [t(\"pricing_plans\"), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Dashboard, \"+I/8DiTSShUktKnnsQ6toWIiyZI=\", false, function () {\n  return [useTheme, useNavigate, useTranslation];\n});\n_c = Dashboard;\nexport default Dashboard; // Esporto il componente Dashboard per l'uso in altre parti dell'app\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Container","Box","Typography","pxToRem","useTheme","useNavigate","CustomButton","useTranslation","jsxDEV","_jsxDEV","Dashboard","_s","theme","navigate","t","handleViewApartmentsClick","handleViewPricingPlansClick","component","maxWidth","children","sx","display","flexDirection","alignItems","padding","borderRadius","backgroundColor","palette","background","paper","boxShadow","marginBottom","variant","color","text","primary","fileName","_jsxFileName","lineNumber","columnNumber","onClick","main","colors","pureWhite","secondary","_c","$RefreshReg$"],"sources":["C:/Users/ion.catana/OneDrive - ENGITEL SPA/Desktop/Work/keycloud/src/components/Dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\r\nimport React from \"react\"; // Importo React per creare componenti\r\nimport { Container, Box, Typography } from \"@mui/material\"; // Importo i componenti Material-UI necessari\r\nimport { pxToRem } from \"../utils/pxToRem\"; // Funzione di utilità per convertire px in rem\r\nimport { useTheme } from \"@mui/material/styles\"; // Importo useTheme per accedere al tema corrente\r\nimport { useNavigate } from \"react-router-dom\"; // Importo useNavigate per gestire la navigazione tra le pagine\r\nimport CustomButton from \"./customComponents/CustomButton\"; // Importo il componente CustomButton per i pulsanti personalizzati\r\nimport { useTranslation } from \"react-i18next\"; // Importo il hook useTranslation per la gestione delle traduzioni\r\n\r\nconst Dashboard = () => {\r\n  // Creo un componente funzionale per la dashboard\r\n\r\n  const theme = useTheme(); // Uso il tema corrente per applicare gli stili\r\n  const navigate = useNavigate(); // Uso useNavigate per navigare tra le pagine dell'applicazione\r\n  const { t } = useTranslation(); // Uso il hook useTranslation per ottenere la funzione di traduzione\r\n\r\n  // Funzione per navigare alla pagina degli appartamenti\r\n  const handleViewApartmentsClick = () => {\r\n    navigate(\"/apartments\"); // Uso navigate per reindirizzare alla pagina degli appartamenti\r\n  };\r\n\r\n  // Funzione per navigare alla pagina dei piani di pagamento\r\n  const handleViewPricingPlansClick = () => {\r\n    navigate(\"/pricing\"); // Uso navigate per reindirizzare alla pagina dei piani di pagamento\r\n  };\r\n\r\n  return (\r\n    // Contenitore principale per il layout della dashboard\r\n    <Container component=\"main\" maxWidth=\"md\">\r\n      {/* Box per contenere il contenuto centrale della dashboard */}\r\n      <Box\r\n        sx={{\r\n          display: \"flex\", // Definisce il layout flessibile\r\n          flexDirection: \"column\", // Disposizione degli elementi in colonna\r\n          alignItems: \"center\", // Centra gli elementi all'interno del box\r\n          padding: pxToRem(20), // Padding interno calcolato in rem\r\n          borderRadius: pxToRem(8), // Bordi arrotondati del box\r\n          backgroundColor: theme.palette.background.paper, // Usa il colore di sfondo dal tema\r\n          boxShadow: `0px ${pxToRem(4)} ${pxToRem(10)} rgba(0, 0, 0, 0.3)`, // Applica un'ombra al box\r\n          marginBottom: pxToRem(40), // Aggiunge spazio sotto la box per separare i componenti\r\n        }}>\r\n        {/* Titolo principale della dashboard */}\r\n        <Typography\r\n          component=\"h1\" // Componente heading principale\r\n          variant=\"h4\" // Variante del testo di livello 4\r\n          sx={{\r\n            marginBottom: pxToRem(24), // Spazio sotto il titolo\r\n            color: theme.palette.text.primary, // Usa il colore del testo dal tema\r\n          }}>\r\n          {t(\"dashboard\")}{\" \"}\r\n          {/* Uso la funzione t per ottenere la traduzione del testo \"Dashboard\" */}\r\n        </Typography>\r\n\r\n        {/* Pulsante per visualizzare gli appartamenti */}\r\n        <CustomButton\r\n          variant=\"contained\" // Variante del pulsante per avere uno sfondo pieno\r\n          onClick={handleViewApartmentsClick} // Usa la funzione per navigare alla pagina degli appartamenti\r\n          sx={{\r\n            backgroundColor: theme.palette.primary.main, // Usa il colore primario dal tema\r\n            color: theme.colors.pureWhite, // Colore del testo impostato a bianco puro\r\n            marginBottom: pxToRem(16), // Spazio sotto il pulsante\r\n            \"&:hover\": { backgroundColor: theme.palette.secondary.main }, // Cambia colore al passaggio del mouse\r\n          }}>\r\n          {t(\"apartments\")}{\" \"}\r\n          {/* Uso la funzione t per ottenere la traduzione del testo \"Appartamenti\" */}\r\n        </CustomButton>\r\n\r\n        {/* Pulsante per visualizzare i piani di pagamento */}\r\n        <CustomButton\r\n          variant=\"contained\" // Variante del pulsante per avere uno sfondo pieno\r\n          onClick={handleViewPricingPlansClick} // Usa la funzione per navigare alla pagina dei piani di pagamento\r\n          sx={{\r\n            backgroundColor: theme.palette.primary.main, // Usa il colore primario dal tema\r\n            color: theme.colors.pureWhite, // Colore del testo impostato a bianco puro\r\n            marginBottom: pxToRem(16), // Spazio sotto il pulsante\r\n            \"&:hover\": { backgroundColor: theme.palette.secondary.main }, // Cambia colore al passaggio del mouse\r\n          }}>\r\n          {t(\"pricing_plans\")}{\" \"}\r\n          {/* Uso la funzione t per ottenere la traduzione del testo \"Piani di Pagamento\" */}\r\n        </CustomButton>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard; // Esporto il componente Dashboard per l'uso in altre parti dell'app\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}