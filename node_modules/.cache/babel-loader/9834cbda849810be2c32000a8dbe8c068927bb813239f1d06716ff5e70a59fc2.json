{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ion.catana\\\\OneDrive - ENGITEL SPA\\\\Desktop\\\\Work\\\\keycloud\\\\src\\\\components\\\\pricing\\\\PricingPlans.js\",\n  _s = $RefreshSig$();\n// src/components/pricing/PricingPlans.js\nimport React from \"react\"; // Importo React per creare componenti\nimport { Container, Grid, Card, CardContent, Typography } from \"@mui/material\"; // Importo i componenti Material-UI necessari\nimport { useTheme } from \"@mui/material/styles\"; // Importo useTheme per accedere al tema corrente\nimport CustomButton from \"../customComponents/CustomButton\"; // Importo CustomButton per pulsanti personalizzati\nimport { pxToRem } from \"../../utils/pxToRem\"; // Importo la funzione pxToRem per convertire px in rem\nimport { useTranslation } from \"react-i18next\"; // Importo il hook useTranslation per la gestione delle traduzioni\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PricingPlans = () => {\n  _s();\n  const theme = useTheme(); // Uso il tema corrente per applicare gli stili\n  const {\n    t\n  } = useTranslation(); // Uso il hook useTranslation per ottenere la funzione di traduzione\n\n  // Definisco i piani tariffari da mostrare\n  const plans = [{\n    title: t(\"basic_plan\"),\n    // Uso la funzione t per ottenere la traduzione del titolo del piano \"Basic\"\n    description: t(\"basic_plan_description\"),\n    // Uso la funzione t per ottenere la traduzione della descrizione del piano\n    price: `$99/${t(\"month\")}` // Prezzo del piano con traduzione per la parola \"month\"\n  }, {\n    title: t(\"medium_plan\"),\n    // Uso la funzione t per ottenere la traduzione del titolo del piano \"Medium\"\n    description: t(\"medium_plan_description\"),\n    // Uso la funzione t per ottenere la traduzione della descrizione del piano\n    price: `$199/${t(\"month\")}` // Prezzo del piano con traduzione per la parola \"month\"\n  }, {\n    title: t(\"premium_plan\"),\n    // Uso la funzione t per ottenere la traduzione del titolo del piano \"Premium\"\n    description: t(\"premium_plan_description\"),\n    // Uso la funzione t per ottenere la traduzione della descrizione del piano\n    price: `$399/${t(\"month\")}` // Prezzo del piano con traduzione per la parola \"month\"\n  }];\n  return (\n    /*#__PURE__*/\n    // Contenitore principale per il layout dei piani tariffari\n    _jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        sx: {\n          color: theme.palette.text.primary\n        } // Colore del testo primario dal tema\n        ,\n        children: [t(\"our_pricing_plans\"), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        children: plans.map(plan => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              backgroundColor: theme.palette.background.default,\n              // Colore di sfondo più chiaro dal tema\n              boxShadow: `0px ${pxToRem(0)} ${pxToRem(8)} ${theme.colors.secondary}`,\n              // Ombra per il box\n              borderRadius: pxToRem(8),\n              // Usa pxToRem per i bordi arrotondati\n              transition: \"transform 0.3s ease\",\n              // Effetto hover per un'animazione di scalatura\n              \"&:hover\": {\n                transform: \"scale(1.05)\" // Ingrandisce leggermente la card al passaggio del mouse\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                component: \"div\",\n                sx: {\n                  color: theme.palette.primary.main,\n                  // Colore principale del tema\n                  marginBottom: pxToRem(16),\n                  // Usa pxToRem per il margine inferiore\n                  fontWeight: \"bold\" // Testo in grassetto per evidenziare il titolo\n                },\n                children: [plan.title, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  color: theme.palette.text.primary,\n                  // Colore del testo dal tema\n                  marginBottom: pxToRem(8) // Usa pxToRem per il margine inferiore\n                },\n                children: [plan.description, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  color: theme.palette.secondary.main,\n                  // Usa il colore secondario per maggiore contrasto\n                  marginTop: pxToRem(12) // Usa pxToRem per il margine superiore\n                },\n                children: [plan.price, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n                variant: \"contained\" // Pulsante con sfondo pieno\n                ,\n                fullWidth: true // Pulsante a larghezza piena\n                ,\n                sx: {\n                  backgroundColor: theme.palette.primary.main,\n                  // Colore primario più forte\n                  color: theme.colors.pureWhite,\n                  // Colore bianco puro per contrasto\n                  marginTop: pxToRem(16),\n                  // Usa pxToRem per il margine superiore\n                  \"&:hover\": {\n                    backgroundColor: theme.palette.primary.dark // Un colore leggermente più scuro per hover\n                  },\n                  padding: `${pxToRem(10)} ${pxToRem(20)}`,\n                  // Usa pxToRem per il padding\n                  fontSize: pxToRem(16) // Usa pxToRem per la dimensione del font\n                },\n                children: [t(\"choose_plan\"), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, plan.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(PricingPlans, \"S668wIP7rZWcI05jnAmri73KTwI=\", false, function () {\n  return [useTheme, useTranslation];\n});\n_c = PricingPlans;\nexport default PricingPlans; // Esporto il componente per l'uso in altre parti dell'app\nvar _c;\n$RefreshReg$(_c, \"PricingPlans\");","map":{"version":3,"names":["React","Container","Grid","Card","CardContent","Typography","useTheme","CustomButton","pxToRem","useTranslation","jsxDEV","_jsxDEV","PricingPlans","_s","theme","t","plans","title","description","price","children","variant","align","gutterBottom","sx","color","palette","text","primary","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","plan","item","xs","sm","md","backgroundColor","background","default","boxShadow","colors","secondary","borderRadius","transition","transform","component","main","marginBottom","fontWeight","marginTop","fullWidth","pureWhite","dark","padding","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/ion.catana/OneDrive - ENGITEL SPA/Desktop/Work/keycloud/src/components/pricing/PricingPlans.js"],"sourcesContent":["// src/components/pricing/PricingPlans.js\r\nimport React from \"react\"; // Importo React per creare componenti\r\nimport { Container, Grid, Card, CardContent, Typography } from \"@mui/material\"; // Importo i componenti Material-UI necessari\r\nimport { useTheme } from \"@mui/material/styles\"; // Importo useTheme per accedere al tema corrente\r\nimport CustomButton from \"../customComponents/CustomButton\"; // Importo CustomButton per pulsanti personalizzati\r\nimport { pxToRem } from \"../../utils/pxToRem\"; // Importo la funzione pxToRem per convertire px in rem\r\nimport { useTranslation } from \"react-i18next\"; // Importo il hook useTranslation per la gestione delle traduzioni\r\n\r\nconst PricingPlans = () => {\r\n  const theme = useTheme(); // Uso il tema corrente per applicare gli stili\r\n  const { t } = useTranslation(); // Uso il hook useTranslation per ottenere la funzione di traduzione\r\n\r\n  // Definisco i piani tariffari da mostrare\r\n  const plans = [\r\n    {\r\n      title: t(\"basic_plan\"), // Uso la funzione t per ottenere la traduzione del titolo del piano \"Basic\"\r\n      description: t(\"basic_plan_description\"), // Uso la funzione t per ottenere la traduzione della descrizione del piano\r\n      price: `$99/${t(\"month\")}`, // Prezzo del piano con traduzione per la parola \"month\"\r\n    },\r\n    {\r\n      title: t(\"medium_plan\"), // Uso la funzione t per ottenere la traduzione del titolo del piano \"Medium\"\r\n      description: t(\"medium_plan_description\"), // Uso la funzione t per ottenere la traduzione della descrizione del piano\r\n      price: `$199/${t(\"month\")}`, // Prezzo del piano con traduzione per la parola \"month\"\r\n    },\r\n    {\r\n      title: t(\"premium_plan\"), // Uso la funzione t per ottenere la traduzione del titolo del piano \"Premium\"\r\n      description: t(\"premium_plan_description\"), // Uso la funzione t per ottenere la traduzione della descrizione del piano\r\n      price: `$399/${t(\"month\")}`, // Prezzo del piano con traduzione per la parola \"month\"\r\n    },\r\n  ];\r\n\r\n  return (\r\n    // Contenitore principale per il layout dei piani tariffari\r\n    <Container>\r\n      {/* Titolo principale della sezione dei piani tariffari */}\r\n      <Typography\r\n        variant=\"h4\"\r\n        align=\"center\"\r\n        gutterBottom\r\n        sx={{ color: theme.palette.text.primary }} // Colore del testo primario dal tema\r\n      >\r\n        {t(\"our_pricing_plans\")}{\" \"}\r\n        {/* Usa la funzione t per ottenere la traduzione del testo \"Our Pricing Plans\" */}\r\n      </Typography>\r\n\r\n      {/* Griglia per visualizzare i piani tariffari */}\r\n      <Grid container spacing={4}>\r\n        {/* Mappo ogni piano tariffario per creare una Card */}\r\n        {plans.map((plan) => (\r\n          <Grid item xs={12} sm={6} md={4} key={plan.title}>\r\n            {/* Card per ogni piano tariffario */}\r\n            <Card\r\n              sx={{\r\n                backgroundColor: theme.palette.background.default, // Colore di sfondo più chiaro dal tema\r\n                boxShadow: `0px ${pxToRem(0)} ${pxToRem(8)} ${\r\n                  theme.colors.secondary\r\n                }`, // Ombra per il box\r\n                borderRadius: pxToRem(8), // Usa pxToRem per i bordi arrotondati\r\n                transition: \"transform 0.3s ease\", // Effetto hover per un'animazione di scalatura\r\n                \"&:hover\": {\r\n                  transform: \"scale(1.05)\", // Ingrandisce leggermente la card al passaggio del mouse\r\n                },\r\n              }}>\r\n              <CardContent>\r\n                {/* Titolo del piano */}\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  component=\"div\"\r\n                  sx={{\r\n                    color: theme.palette.primary.main, // Colore principale del tema\r\n                    marginBottom: pxToRem(16), // Usa pxToRem per il margine inferiore\r\n                    fontWeight: \"bold\", // Testo in grassetto per evidenziare il titolo\r\n                  }}>\r\n                  {plan.title} {/* Titolo del piano tradotto */}\r\n                </Typography>\r\n\r\n                {/* Descrizione del piano */}\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  sx={{\r\n                    color: theme.palette.text.primary, // Colore del testo dal tema\r\n                    marginBottom: pxToRem(8), // Usa pxToRem per il margine inferiore\r\n                  }}>\r\n                  {plan.description} {/* Descrizione del piano tradotta */}\r\n                </Typography>\r\n\r\n                {/* Prezzo del piano */}\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  sx={{\r\n                    color: theme.palette.secondary.main, // Usa il colore secondario per maggiore contrasto\r\n                    marginTop: pxToRem(12), // Usa pxToRem per il margine superiore\r\n                  }}>\r\n                  {plan.price}{\" \"}\r\n                  {/* Prezzo del piano con traduzione per \"month\" */}\r\n                </Typography>\r\n\r\n                {/* Pulsante per scegliere il piano */}\r\n                <CustomButton\r\n                  variant=\"contained\" // Pulsante con sfondo pieno\r\n                  fullWidth // Pulsante a larghezza piena\r\n                  sx={{\r\n                    backgroundColor: theme.palette.primary.main, // Colore primario più forte\r\n                    color: theme.colors.pureWhite, // Colore bianco puro per contrasto\r\n                    marginTop: pxToRem(16), // Usa pxToRem per il margine superiore\r\n                    \"&:hover\": {\r\n                      backgroundColor: theme.palette.primary.dark, // Un colore leggermente più scuro per hover\r\n                    },\r\n                    padding: `${pxToRem(10)} ${pxToRem(20)}`, // Usa pxToRem per il padding\r\n                    fontSize: pxToRem(16), // Usa pxToRem per la dimensione del font\r\n                  }}>\r\n                  {t(\"choose_plan\")}{\" \"}\r\n                  {/* Usa la funzione t per ottenere la traduzione del testo \"Choose Plan\" */}\r\n                </CustomButton>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PricingPlans; // Esporto il componente per l'uso in altre parti dell'app\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}