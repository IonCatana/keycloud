{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ion.catana\\\\OneDrive - ENGITEL SPA\\\\Desktop\\\\Work\\\\keycloud\\\\src\\\\components\\\\header\\\\LanguageSubMenu.js\",\n  _s = $RefreshSig$();\n// src/components/header/LanguageSubMenu.js\nimport React from \"react\"; // Importo React per creare componenti\nimport { Menu, MenuItem, Typography } from \"@mui/material\"; // Importo i componenti Material-UI necessari\nimport ReactCountryFlag from \"react-country-flag\"; // Importo ReactCountryFlag per mostrare le bandiere delle lingue\nimport { useTheme } from \"@mui/material/styles\"; // Importo useTheme per accedere al tema corrente\nimport { pxToRem } from \"../../utils/pxToRem\"; // Funzione di utilità per convertire px in rem\nimport { useTranslation } from \"react-i18next\"; // Importo il hook useTranslation per la gestione delle traduzioni\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageSubMenu = ({\n  anchorEl,\n  onClose\n}) => {\n  _s();\n  // Creo un componente funzionale che riceve anchorEl e onClose come prop\n\n  const theme = useTheme(); // Uso il tema corrente per applicare gli stili\n  const {\n    i18n,\n    t\n  } = useTranslation(); // Uso useTranslation per ottenere la funzione di traduzione e l'oggetto i18n\n\n  // Funzione per cambiare la lingua\n  const handleLanguageChange = lang => {\n    i18n.changeLanguage(lang); // Uso i18next per cambiare la lingua\n    onClose(); // Chiudo il sotto-menu dopo aver selezionato la lingua\n  };\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    anchorEl: anchorEl // Definisco l'elemento di ancoraggio per posizionare il menu\n    ,\n    open: Boolean(anchorEl) // Controllo se il menu è aperto in base all'elemento di ancoraggio\n    ,\n    onClose: onClose // Funzione per chiudere il menu\n    ,\n    sx: {\n      mt: pxToRem(3)\n    } // Stile per aggiungere un margine superiore al menu\n    ,\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: () => handleLanguageChange(\"en\"),\n      children: [/*#__PURE__*/_jsxDEV(ReactCountryFlag, {\n        countryCode: \"US\" // Codice del paese per gli Stati Uniti\n        ,\n        svg: true // Utilizza l'immagine SVG della bandiera\n        ,\n        style: {\n          width: pxToRem(20),\n          // Larghezza della bandiera\n          height: pxToRem(20),\n          // Altezza della bandiera\n          marginRight: pxToRem(8) // Margine a destra per separare la bandiera dal testo\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          color: i18n.language === \"en\" ? theme.palette.primary.main // Colore primario se la lingua corrente è inglese\n          : theme.palette.text.primary // Colore del testo normale per le altre lingue\n        },\n        children: [t(\"english\"), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: () => handleLanguageChange(\"it\"),\n      children: [/*#__PURE__*/_jsxDEV(ReactCountryFlag, {\n        countryCode: \"IT\" // Codice del paese per l'Italia\n        ,\n        svg: true // Utilizza l'immagine SVG della bandiera\n        ,\n        style: {\n          width: pxToRem(20),\n          // Larghezza della bandiera\n          height: pxToRem(20),\n          // Altezza della bandiera\n          marginRight: pxToRem(8) // Margine a destra per separare la bandiera dal testo\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          color: i18n.language === \"it\" ? theme.palette.primary.main // Colore primario se la lingua corrente è italiano\n          : theme.palette.text.primary // Colore del testo normale per le altre lingue\n        },\n        children: [t(\"italian\"), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageSubMenu, \"6crA1+qnlQ6WD/ynA/DcGphYVDY=\", false, function () {\n  return [useTheme, useTranslation];\n});\n_c = LanguageSubMenu;\nexport default LanguageSubMenu; // Esporto il componente per l'uso in altre parti dell'app\nvar _c;\n$RefreshReg$(_c, \"LanguageSubMenu\");","map":{"version":3,"names":["React","Menu","MenuItem","Typography","ReactCountryFlag","useTheme","pxToRem","useTranslation","jsxDEV","_jsxDEV","LanguageSubMenu","anchorEl","onClose","_s","theme","i18n","t","handleLanguageChange","lang","changeLanguage","open","Boolean","sx","mt","children","onClick","countryCode","svg","style","width","height","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","color","language","palette","primary","main","text","_c","$RefreshReg$"],"sources":["C:/Users/ion.catana/OneDrive - ENGITEL SPA/Desktop/Work/keycloud/src/components/header/LanguageSubMenu.js"],"sourcesContent":["// src/components/header/LanguageSubMenu.js\r\nimport React from \"react\"; // Importo React per creare componenti\r\nimport { Menu, MenuItem, Typography } from \"@mui/material\"; // Importo i componenti Material-UI necessari\r\nimport ReactCountryFlag from \"react-country-flag\"; // Importo ReactCountryFlag per mostrare le bandiere delle lingue\r\nimport { useTheme } from \"@mui/material/styles\"; // Importo useTheme per accedere al tema corrente\r\nimport { pxToRem } from \"../../utils/pxToRem\"; // Funzione di utilità per convertire px in rem\r\nimport { useTranslation } from \"react-i18next\"; // Importo il hook useTranslation per la gestione delle traduzioni\r\n\r\nconst LanguageSubMenu = ({ anchorEl, onClose }) => {\r\n  // Creo un componente funzionale che riceve anchorEl e onClose come prop\r\n\r\n  const theme = useTheme(); // Uso il tema corrente per applicare gli stili\r\n  const { i18n, t } = useTranslation(); // Uso useTranslation per ottenere la funzione di traduzione e l'oggetto i18n\r\n\r\n  // Funzione per cambiare la lingua\r\n  const handleLanguageChange = (lang) => {\r\n    i18n.changeLanguage(lang); // Uso i18next per cambiare la lingua\r\n    onClose(); // Chiudo il sotto-menu dopo aver selezionato la lingua\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      anchorEl={anchorEl} // Definisco l'elemento di ancoraggio per posizionare il menu\r\n      open={Boolean(anchorEl)} // Controllo se il menu è aperto in base all'elemento di ancoraggio\r\n      onClose={onClose} // Funzione per chiudere il menu\r\n      sx={{ mt: pxToRem(3) }} // Stile per aggiungere un margine superiore al menu\r\n    >\r\n      {/* MenuItem per selezionare la lingua inglese */}\r\n      <MenuItem onClick={() => handleLanguageChange(\"en\")}>\r\n        {/* Bandiera degli Stati Uniti per indicare la lingua inglese */}\r\n        <ReactCountryFlag\r\n          countryCode=\"US\" // Codice del paese per gli Stati Uniti\r\n          svg // Utilizza l'immagine SVG della bandiera\r\n          style={{\r\n            width: pxToRem(20), // Larghezza della bandiera\r\n            height: pxToRem(20), // Altezza della bandiera\r\n            marginRight: pxToRem(8), // Margine a destra per separare la bandiera dal testo\r\n          }}\r\n        />\r\n        {/* Testo che mostra il nome della lingua inglese */}\r\n        <Typography\r\n          sx={{\r\n            color:\r\n              i18n.language === \"en\"\r\n                ? theme.palette.primary.main // Colore primario se la lingua corrente è inglese\r\n                : theme.palette.text.primary, // Colore del testo normale per le altre lingue\r\n          }}>\r\n          {t(\"english\")}{\" \"}\r\n          {/* Uso la funzione t per ottenere il nome tradotto della lingua */}\r\n        </Typography>\r\n      </MenuItem>\r\n\r\n      {/* MenuItem per selezionare la lingua italiana */}\r\n      <MenuItem onClick={() => handleLanguageChange(\"it\")}>\r\n        {/* Bandiera dell'Italia per indicare la lingua italiana */}\r\n        <ReactCountryFlag\r\n          countryCode=\"IT\" // Codice del paese per l'Italia\r\n          svg // Utilizza l'immagine SVG della bandiera\r\n          style={{\r\n            width: pxToRem(20), // Larghezza della bandiera\r\n            height: pxToRem(20), // Altezza della bandiera\r\n            marginRight: pxToRem(8), // Margine a destra per separare la bandiera dal testo\r\n          }}\r\n        />\r\n        {/* Testo che mostra il nome della lingua italiana */}\r\n        <Typography\r\n          sx={{\r\n            color:\r\n              i18n.language === \"it\"\r\n                ? theme.palette.primary.main // Colore primario se la lingua corrente è italiano\r\n                : theme.palette.text.primary, // Colore del testo normale per le altre lingue\r\n          }}>\r\n          {t(\"italian\")}{\" \"}\r\n          {/* Uso la funzione t per ottenere il nome tradotto della lingua */}\r\n        </Typography>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default LanguageSubMenu; // Esporto il componente per l'uso in altre parti dell'app\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}